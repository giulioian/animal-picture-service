package com.example.animalpics.service;

import com.example.animalpics.model.AnimalPicture;
import com.example.animalpics.repository.AnimalPictureRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.time.LocalDateTime;
import java.util.Random;

@Service
public class AnimalPictureService {
    
    private final AnimalPictureRepository repository;
    private final RestTemplate restTemplate;
    private final Random random;

    @Autowired
    public AnimalPictureService(AnimalPictureRepository repository) {
        this.repository = repository;
        this.restTemplate = new RestTemplate();
        this.random = new Random();
    }

    public void fetchAndSavePictures(String animalType, int count) {
        for (int i = 0; i < count; i++) {
            int width = 300 + random.nextInt(200);
            int height = 300 + random.nextInt(200);
            
            String url = switch (animalType.toLowerCase()) {
                case "cat" -> String.format("https://placekitten.com/%d/%d", width, height);
                case "dog" -> String.format("https://place.dog/%d/%d", width, height);
                case "bear" -> String.format("https://placebear.com/%d/%d", width, height);
                default -> throw new IllegalArgumentException("Invalid animal type");
            };

            byte[] imageData = restTemplate.getForObject(url, byte[].class);
            
            AnimalPicture picture = new AnimalPicture();
            picture.setAnimalType(animalType);
            picture.setImageData(imageData);
            picture.setCreatedAt(LocalDateTime.now());
            
            repository.save(picture);
        }
    }

    public byte[] getLastPicture(String animalType) {
        return repository.findTopByAnimalTypeOrderByCreatedAtDesc(animalType)
                .map(AnimalPicture::getImageData)
                .orElseThrow(() -> new RuntimeException("No picture found for: " + animalType));
    }
}
